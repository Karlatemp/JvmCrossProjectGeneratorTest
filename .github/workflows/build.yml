on:
  push:
    branches: [main]
  pull_request: {}
  release:
    types:
      - created

name: Build CI

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.cross }}
    strategy:
      matrix:
        include:
          - cross: linux-x86
            artin: linux-x86
          - cross: linux-x64
            artin: linux-x64
          - cross: linux-arm64
            artin: linux-arm64
          - cross: windows-shared-x86
            artin: windows-x86
          - cross: windows-shared-x64
            artin: windows-arm64
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Chmod scripts
        run: |
          chmod +x gradlew
          chmod +x .scripts/build.sh
          chmod +x .scripts/setup_docker.sh
      - name: Build java
        run: ./gradlew assemble
      - name: Build native (${{ matrix.cross }})
        run: .scripts/setup_docker.sh
        env:
          CROSS: ${{ matrix.cross }}
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artin }}
          path: |
            native/cmake-build-debug/bin
      - run: |
          ls -R native
          exit 0
      - name: RunNative
        if: "${{ matrix.cross == 'linux-x64' }}"
        run: ./gradlew build --info
  build-macos:
    runs-on: macos-latest
    name: Build on MacOS
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Chmod scripts
        run: |
          chmod +x gradlew
          chmod +x .scripts/build.sh
          chmod +x .scripts/setup_docker.sh
      - name: Build java
        run: ./gradlew assemble
      - name: Build native
        run: .scripts/build.sh
        env:
          CROSS: MacOS
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-x86_64
          path: |
            native/cmake-build-debug/bin
      - name: RunNative
        run: ./gradlew build --info

  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [ build, build-macos ]
    if: "${{ github.event_name == 'release' }}"
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: pre setup
        run: |
          chmod +x gradlew
          mkdir -p temp/archives
      - uses: actions/download-artifact@v2
        with:
          path: temp/artifacts
      - run: ls -R
      - name: Do Upload
        run: ./gradlew :ci-release-helper:uploadReleaseAssets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          POST_URL: ${{ github.event.release.upload_url }}
